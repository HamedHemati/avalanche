:mod:`avalanche.training.plugins.gdumb`
=======================================

.. py:module:: avalanche.training.plugins.gdumb


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.training.plugins.gdumb.GDumbPlugin



.. py:class:: GDumbPlugin(mem_size: int = 200)

   Bases: :class:`avalanche.training.plugins.strategy_plugin.StrategyPlugin`

   GDumb plugin.

   At each experience the model is trained  from scratch using a buffer of
   samples collected from all the previous learning experiences.
   The buffer is updated at the start of each experience to add new classes or
   new examples of already encountered classes.
   In multitask scenarios, mem_size is the memory size for each task.
   This plugin can be combined with a Naive strategy to obtain the
   standard GDumb strategy.
   https://www.robots.ox.ac.uk/~tvg/publications/2020/gdumb.pdf

   .. method:: before_train_dataset_adaptation(self, strategy: BaseStrategy, **kwargs)

      Reset model. 


   .. method:: after_train_dataset_adaptation(self, strategy: BaseStrategy, **kwargs)



